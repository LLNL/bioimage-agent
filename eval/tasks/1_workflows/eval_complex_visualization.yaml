# Advanced Visualization and Rendering Tests for napari-mcp
# These tests evaluate advanced rendering techniques and complex visualization setups
# Focus: 3D rendering, iso-surfaces, volume rendering, MIPs, and sophisticated visualization scenarios

# Test 1: 3D View and Iso-surface Rendering
- vars:
    question: |
      Load the image "D:/Development/napari-mcp/eval/data/SNAP_IgM_BCR_Cell_1/input/SNAP_IgM_BCR_Cell_1_ch0_t14.tif".
      Switch to 3D view mode.
      Enable iso-surface rendering for the loaded layer.
      Take a screenshot to verify the 3D iso-surface rendering.
      Respond with <1> if the 3D iso-surface rendering was successfully set up, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 2: MIP (Maximum Intensity Projection) with Multi-channel
- vars:
    question: |
      Load the second channel "D:/Development/napari-mcp/eval/data/SNAP_IgM_BCR_Cell_1/input/SNAP_IgM_BCR_Cell_1_ch1_t14.tif".
      Switch to 3D view and create Maximum Intensity Projections (MIPs) for both channels.
      Set channel 0 to green colormap and channel 1 to magenta colormap.
      Use additive blending to combine the channels in MIP mode.
      Take a screenshot of the MIP result.
      Analyze the screenshot and respond with <1> if both colors are present in the MIP, or <0> otherwise. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 3: Volume Rendering with Surface Conversion
- vars:
    question: |
      Switch to volume rendering mode for the 3D data.
      Take a screenshot to verify the volume rendering is active.
      Convert the volume data to surface rendering using iso-surface.
      Take another screenshot to verify the surface rendering.
      Respond with <1> if both volume and surface rendering were successfully created, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 4: Complex Multi-layer 3D Visualization
- vars:
    question: |
      Create a complex 3D visualization setup: set different blending modes for each layer (translucent for layer 1, additive for layer 2).
      Adjust opacities to 0.6 for layer 1 and 0.8 for layer 2.
      Apply different colormaps: 'hot' for layer 1 and 'cool' for layer 2.
      Set different interpolation modes: 'linear' for layer 1 and 'cubic' for layer 2.
      Enable iso-surface rendering for both layers.
      Take a screenshot showing the complex multi-layer 3D setup.
      Respond with <1> if the complex 3D visualization setup was successful, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 5: Advanced 3D Camera Control and Navigation
- vars:
    question: |
      Start with the default 3D view and take an initial screenshot.
      Rotate the camera to show the 3D data from a different perspective (side view).
      Take a screenshot to verify the 3D camera rotation.
      Zoom in on the 3D structures so they appear larger in the viewport.
      Take a screenshot to verify the 3D zoom.
      Pan the camera to move the 3D view to show a different region.
      Take a screenshot to verify the 3D pan.
      Reset the camera to the default 3D view.
      Take a final screenshot to verify the 3D reset.
      Respond with <1> if all 3D camera operations were successful, or <0> if any failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 6: Iso-surface Threshold Adjustment
- vars:
    question: |
      Adjust the iso-surface threshold to different values to explore different surface levels.
      Start with a low threshold (e.g., 0.1) and take a screenshot.
      Increase the threshold to a medium value (e.g., 0.5) and take a screenshot.
      Increase the threshold to a high value (e.g., 0.9) and take a screenshot.
      Respond with <1> if you successfully adjusted iso-surface thresholds and could see different surface levels, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 7: Performance Test with 3D Rendering
- vars:
    question: |
      Load a large 3D image file and measure the time it takes to load.
      Switch to 3D view and enable iso-surface rendering.
      Apply various 3D visualization settings (colormap, contrast, blending, iso-surface threshold).
      Take a screenshot to verify the 3D rendering performance.
      Respond with <1> if the large 3D file loaded successfully and 3D rendering was responsive, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 8: Multi-channel 3D Overlay with Different Rendering Modes
- vars:
    question: |
      Set up a multi-channel 3D visualization: channel 0 with iso-surface rendering, channel 1 with volume rendering.
      Apply different colormaps and blending modes to each channel.
      Adjust the camera to show both rendering modes effectively.
      Take a screenshot showing the combined 3D rendering modes.
      Respond with <1> if the multi-channel 3D overlay with different rendering modes was successful, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true

# Test 9: Cleanup - Reset for next test run
- vars:
    question: |
      Delete all loaded layers and reset the view to 2D mode.
      Remove any annotations or measurements.
      Respond with <1> if the cleanup was successful, or <0> if it failed. Only respond with <1> or <0>.
  assert:
    - type: contains-all
      value: "<1>"
    - type: not-contains
      value: "<0>"
  options:
    cache: false
    runSerially: true
